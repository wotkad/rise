#!/usr/bin/env node

const { execSync } = require("child_process");
const fs = require("fs");
const path = require("path");

// ---------- –ü–∞–ø–∫–∞ –¥–ª—è –æ—Ç—á—ë—Ç–æ–≤ ----------
const REPORTS_DIR = path.resolve(__dirname, "../../reports/lighthouse");
if (!fs.existsSync(REPORTS_DIR)) {
  fs.mkdirSync(REPORTS_DIR, { recursive: true });
}

// ---------- –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ—Ç—á—ë—Ç–æ–≤ ----------
fs.readdirSync(REPORTS_DIR)
  .filter(file => file.startsWith("lighthouse-report"))
  .forEach(file => fs.unlinkSync(path.join(REPORTS_DIR, file)));

// console.log("üßπ –°—Ç–∞—Ä—ã–µ –æ—Ç—á—ë—Ç—ã —É–¥–∞–ª–µ–Ω—ã.");

// ---------- –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã ----------
function formatDate(d) {
  const pad = (n) => String(n).padStart(2, "0");
  const day = pad(d.getDate());
  const month = pad(d.getMonth() + 1);
  const year = d.getFullYear();
  const hours = pad(d.getHours());
  const minutes = pad(d.getMinutes());
  const seconds = pad(d.getSeconds());
  return `${day}-${month}-${year}-${hours}-${minutes}-${seconds}`;
}

const timestamp = formatDate(new Date());
const url = "http://localhost:8080";

// ---------- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –¥–≤—É—Ö —Ä–µ–∂–∏–º–æ–≤ ----------
const configs = [
  { name: "mobile", flags: "" },
  { name: "desktop", flags: "--preset=desktop" }
];

console.log(`üöÄ –ó–∞–ø—É—Å–∫ Lighthouse...`);
// ---------- –ó–∞–ø—É—Å–∫ Lighthouse –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–µ–∂–∏–º–∞ ----------
for (const { name, flags } of configs) {
  const reportFile = path.join(REPORTS_DIR, `lighthouse-report-${name}-${timestamp}.html`);

  const command = [
    "npx lighthouse",
    url,
    "--quiet",
    "--chrome-flags='--headless --no-sandbox --disable-gpu'",
    "--output html",
    `--output-path=${reportFile}`,
    "--only-categories=performance,accessibility,best-practices,seo",
    flags
  ].join(" ");

  try {
    execSync(command, { stdio: "inherit" });
    // console.log(`‚úÖ ${name}-–æ—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω: /reports/lighthouse-report-${name}-${timestamp}.html`);
  } catch (err) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Lighthouse (${name}):`, err.message);
  }
}

console.log(`‚úÖ –ì–æ—Ç–æ–≤–æ: –æ—Ç—á—ë—Ç—ã –æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ (/reports/lighthouse)`);
